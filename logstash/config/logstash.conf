input {
	tcp {
		port => 5000
		type => "access"
	}
	
	tcp {
		port => 5001
		type => "error"
	}
}

filter {
	if [type] == "access" {
		grok {
                	match => [
				"message", "%{HOSTNAME:ip_host} - - \[%{HTTPDATE:logDate}\] \"%{WORD:method} (?:%{URIPATHPARAM:url}|%{DATA:url}) HTTP/%{NUMBER:httpversion}\" %{WORD:response} (?:%{NUMBER:bytes}|-)"
			]
        	}
		
		date {  
                	match => ["logDate","dd/MMM/yyyy:HH:mm:ss Z"]
        	}
	}

	if [type] == "error" {
		grok {
			match => [
				"message", "\[%{DAY:day} %{MONTH:month}  %{INT:date} %{TIME:time} %{YEAR:year}\] (?:\[%{LOGLEVEL:level}\]|-) (?:\[client %{IP:ip_host}\]|-) (?:\(%{INT:error_code}\)|-)%{GREEDYDATA:content}",
				"message", "\[%{DAY:day} %{MONTH:month}  %{INT:date} %{TIME:time} %{YEAR:year}\] (?:\[%{LOGLEVEL:level}\]|-) %{GREEDYDATA:content}",
				"message", "\[%{DAY:day} %{MONTH:month}  %{INT:date} %{TIME:time} %{YEAR:year}\] %{GREEDYDATA:content}"
			]
			
			add_field => {
				"logDate" => "%{date} %{month} %{year} %{time}"
			}
		}

		date {  
                	match => ["logDate","dd MMM yyyy HH:mm:ss"]
        	}
	}
	

}

output {

	stdout { codec => rubydebug }
	
	if "_grokparsefailure" not in [tags] { 
		elasticsearch {
                	        hosts => "elasticsearch:9200"
        	}
	}
}

